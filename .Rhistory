theme_void() +
facet_wrap(~ member_casual) +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
theme_void() +
facet_wrap(~ member_casual) +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
theme_void() +
facet_wrap(~ member_casual) +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = -0.5))
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
theme_void() +
facet_wrap(~ member_casual) +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
theme(axis.text.x = element_blank(),  # Remove x-axis text
axis.title.x = element_blank(),  # Remove x-axis title
axis.text.y = element_text(vjust = 2),  # Adjust y-axis text position
plot.margin = unit(c(1, 1, 2, 1), "cm"))
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
theme_void() +
facet_wrap(~ member_casual) +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
theme_void() +
facet_wrap(~ member_casual) +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual) +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual) +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
theme(axis.text.x = element_blank(),  # Remove x-axis text
axis.title.x = element_blank(),  # Remove x-axis title
plot.margin = unit(c(1, 1, 2, 1), "cm"))  # Adjust plot mar
custom_labels <- function(variable) {
label_wrap_gen(width = 10)(substr(variable, 1, 10))
}
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual, labeller = labeller(member_casual = custom_labels)) +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
theme(axis.text.x = element_blank(),  # Remove x-axis text
axis.title.x = element_blank(),  # Remove x-axis title
plot.margin = unit(c(1, 1, 2, 1), "cm"))  # Adjust plot mar
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual, labeller = labeller(member_casual = custom_labels)) +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
label_wrap_gen(width = 50)(substr(variable, 1, 50))
custom_labels <- function(variable) {
label_wrap_gen(width = 50)(substr(variable, 1, 50))
}
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual, labeller = labeller(member_casual = custom_labels)) +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual, labeller = labeller(member_casual = custom_labels)) +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
theme(axis.text.x = element_blank(),  # Remove x-axis text
axis.title.x = element_blank(),  # Remove x-axis title
plot.margin = unit(c(1, 1, 2, 1), "cm"),  # Adjust plot margins
strip.background = element_blank(),  # Remove background color of facet labels
strip.placement = "outside",  # Place facet labels outside the plot
strip.text = element_text(hjust = 0))  # Adjus
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual) +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# Custom labelling function
custom_labels <- function(variable) {
label_wrap_gen(width = 10)(substr(variable, 1, 10))
}
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual, labeller = labeller(member_casual = custom_labels), strip.position = "bottom") +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual, strip.position = "bottom") +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the total rides based on membership type and season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual, strip.position = "bottom") +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the Total Rides based on Membership type and Season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual, strip.position = "bottom") +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the Total Rides based on Membership type and Season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
df$part_of_day <- ifelse(hour(start_time) < 6, "Night [9pm-6am)",
ifelse(hour(start_time) < 12, "Morning [6am-12pm)",
ifelse(hour(start_time) < 17, "Afternoon [12pm-5pm)",
ifelse(hour(start_time) < 21, "Evening [5pm-9pm)", "Night [9pm-6am)"))))
tab_tc <- (df %>% count(part_of_day, member_casual))
tab_tc <- tab_tc %>%
group_by(member_casual) %>%
mutate(Percentage = n / sum(n) * 100) %>%
arrange(member_casual)
day_part_order <- c("Morning [6am-12pm)",  "Afternoon [12pm-5pm)", "Evening [5pm-9pm)", "Night [9pm-6am)")
## order the data
tab_tc$part_of_day <- factor(tab_tc$part_of_day, levels = day_part_order)
ggplot(tab_tc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "part_of_day") +
theme_void() +
facet_wrap(~ member_casual) +
labs(fill = "Part of the Day") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
ggplot(tab_tc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "part_of_day") +
theme_void() +
facet_wrap(~ member_casual) +
labs(fill = "Part of the Day") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
ggplot(tab_tc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "part_of_day") +
theme_void() +
facet_wrap(~ member_casual, strip.position = "bottom") +
labs(fill = "Part of the Day") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Total Rides based on Membership type and Season") +
```
ggplot(tab_tc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "part_of_day") +
theme_void() +
facet_wrap(~ member_casual, strip.position = "bottom") +
labs(fill = "Part of the Day") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Total Rides based on Membership type and Season")
ggplot(tab_tc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "part_of_day") +
theme_void() +
facet_wrap(~ member_casual, strip.position = "bottom") +
labs(fill = "Part of the Day") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Totat Ride in Different part of the day and Season")
df$part_of_day <- ifelse(hour(start_time) < 6, "Night [9pm-6am)",
ifelse(hour(start_time) < 12, "Morning [6am-12pm)",
ifelse(hour(start_time) < 17, "Afternoon [12pm-5pm)",
ifelse(hour(start_time) < 21, "Evening [5pm-9pm)", "Night [9pm-6am)"))))
tab_tsc <- (df %>% count(weekend_status, part_of_day, member_casual))
tab_tsc$weekend_status <- factor(tab_tsc$weekend_status, levels = c(1, 0), labels = c("weekend", "weekdays"))
tab_tsc <- tab_tsc %>%
group_by(weekend_status, member_casual) %>%
mutate(Percentage = n / sum(n) * 100) %>%
arrange(member_casual)
day_part_order <- c("Morning [6am-12pm)",  "Afternoon [12pm-5pm)", "Evening [5pm-9pm)", "Night [9pm-6am)")
## order the data
tab_tc$part_of_day <- factor(tab_tc$part_of_day, levels = day_part_order)
ggplot(tab_tsc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_grid(weekend_status ~ member_casual) +
theme_void() +
theme() + geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
ggplot(tab_tsc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_grid(weekend_status ~ member_casual, strip.position = "bottom") +
theme_void() +
theme() + geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
ggplot(tab_tsc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_grid(weekend_status ~ member_casual, strip.position = "bottom") +
theme_void() +
theme() +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Totat Ride in Different part of the day and Season")
ggplot(tab_tsc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_grid(weekend_status ~ member_casual, switch = "y") +
theme_void() +
theme() +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Totat Ride in Different part of the day and Season")
ggplot(tab_tsc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_grid(weekend_status ~ member_casual, switch = "x") +
theme_void() +
theme() +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Totat Ride in Different part of the day and Season")
ggplot(tab_tsc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_grid(weekend_status ~ member_casual, switch = "both") +
theme_void() +
theme() +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Totat Ride in Different part of the day and Season")
ggplot(tab_tsc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_grid(weekend_status ~ member_casual, switch = "both") +
theme_void() +
theme() +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Totat Ride in Different part of the day and Season")
ggplot(tab_tsc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_grid(weekend_status ~ member_casual, switch = "both") +
theme_void() +
theme() +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Totat Ride in Different part of the day based on Season and Weekday/Weeekend")
tab_rt_mc <- (df %>% count(rideable_type, member_casual))
ggplot(tab_rt_mc, aes(x=rideable_type, y = n, fill=member_casual)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = n), vjust = -0.3, position = position_dodge(width = 0.9)) +
xlab("Bike Type") +
ylab("Number of ride") +
ggtitle("Number of ride in different bike type and membership type") +
scale_y_continuous(labels = NULL)
ggplot(tab_rt_mc, aes(x=rideable_type, y = n, fill=member_casual)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = n), vjust = -0.3, position = position_dodge(width = 0.9)) +
xlab("Bike Type") +
ylab("Number of ride") +
ggtitle("Number of Ride in Different Bike type and Membership type") +
scale_y_continuous(labels = NULL)
ggplot(tab_rt_mc, aes(x=rideable_type, y = n, fill=member_casual)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = n), vjust = -0.3, position = position_dodge(width = 0.9)) +
xlab("Bike Type") +
ylab("Number of ride") +
labs("Membership Type")
ggplot(tab_rt_mc, aes(x=rideable_type, y = n, fill=member_casual)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = n), vjust = -0.3, position = position_dodge(width = 0.9)) +
xlab("Bike Type") +
ylab("Number of ride") +
labs("Membership Type") +
ggtitle("Number of Ride in Different Bike type and Membership type") +
scale_y_continuous(labels = NULL)
# make the plot
ggplot(tab_ss, aes(x = "", y = Percentage, fill = is_summer)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "is_summer") +
facet_wrap(~ member_casual, strip.position = "bottom") +
theme_void() +
labs(fill = "Season") +
ggtitle("Percentage of the Total Rides based on Membership type and Season") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
ggplot(tab_tsc, aes(x = "", y = Percentage, fill = part_of_day)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_grid(weekend_status ~ member_casual, switch = "both") +
theme_void() +
theme() +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
labs(fill = "Part of the Day") +
ggtitle("Percentage of the Totat Ride in Different part of the day based on Season and Weekday/Weeekend")
ggplot(tab_rt_mc, aes(x=rideable_type, y = n, fill=member_casual)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = n), vjust = -0.3, position = position_dodge(width = 0.9)) +
xlab("Bike Type") +
ylab("Number of ride") +
labs("Membership Type") +
ggtitle("Number of Ride in Different Bike type and Membership type") +
labs(fill = "Membership Type") +
scale_y_continuous(labels = NULL)
st_len <- length(unique(start_station_name))
cat(paste0("Total number of unique start station is: ", bold(st_len)))
ed_len <- length(unique(end_station_name))
cat(paste0("Total number of unique start station is: ", bold(ed_len)))
top_route_df <- as.data.frame(table(start_station_name, end_station_name)) %>%
filter(start_station_name != "" & end_station_name != "") %>%
arrange(desc(Freq)) %>%
head(10)
top_route_df$Routes <- paste(top_route_df$start_station_name, top_route_df$end_station_name, sep = " TO ")
# get round trip info
top_route_df$is_round_trip <- ifelse(as.character(top_route_df$start_station_name) ==
as.character(top_route_df$end_station_name), 1, 0)
top_route_df <- subset(top_route_df, select = -c(start_station_name, end_station_name))
# swap the position of the route names and freq
top_route_df <- top_route_df[c(2, 3, 1)]
top_route_df
top_route_df$Freq <- as.numeric(top_route_df$Freq)
# make the routes names as character from vector
top_route_df$Routes <- as.character(top_route_df$Routes)
add_newline <- function(route) {
if (nchar(route) > 30 && grepl("TO", route)) {
route <- gsub("TO", "TO\n", route)
}
return(route)
}
top_route_df$Routes <- sapply(top_route_df$Routes, add_newline)
# order the routes accordingly their counts
top_route_df$Routes <- factor(top_route_df$Routes, levels = top_route_df$Routes[order(-top_route_df$Freq)])
my_colors <- c("#594E6D", "#6A5E82", "#7C6D98", "#948BA4", "#998EAD", "#9D91B5", "#A294BE", "#A796C7", "#AC99D0", "#B19CD9")
ggplot(top_route_df, aes(x = Routes , y = Freq, fill = Routes)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Freq), vjust = -0.5, size = 4.5) +
ylab("Number of rides") +
xlab("Routes Name") +
ggtitle("Top-10 Unique Routes and Their Counts") +
scale_y_continuous(labels = NULL) +
theme(
axis.text.x = element_blank(),
axis.ticks = element_blank(),
legend.position = "right",
legend.text = element_text(size = 12),
legend.title = element_text(size = 13),
plot.margin = unit(c(1, 0, 1, 1), "cm"),
legend.key.height = unit(1.2, "cm")) +
labs(fill = "Routes Name") +
scale_fill_manual(values = my_colors)
ggplot(top_route_df, aes(x = Routes , y = Freq, fill = Routes)) +
geom_bar(stat = "identity") +
geom_text(aes(label = Freq), vjust = -0.5, size = 4.5) +
ylab("Number of Rides") +
xlab("Routes Name") +
ggtitle("Top-10 Unique Routes and Their Counts") +
scale_y_continuous(labels = NULL) +
theme(
axis.text.x = element_blank(),
axis.ticks = element_blank(),
legend.position = "right",
legend.text = element_text(size = 12),
legend.title = element_text(size = 13),
plot.margin = unit(c(1, 0, 1, 1), "cm"),
legend.key.height = unit(1.2, "cm")) +
labs(fill = "Routes Name") +
scale_fill_manual(values = my_colors)
num_round_t10_trip <- sum(top_route_df$is_round_trip == 1)
cat(paste0("Number of round trip in top-10 routes is: ", bold(num_round_t10_trip)))
df$is_round_trip <- ifelse(start_station_name == end_station_name, 1, 0)
# get the count of round trip/one-way trip membership-wise
tab_round_trip <- df %>%
filter(start_station_name != "") %>%
filter(end_station_name != "") %>%
count(is_round_trip, member_casual)
# set the string variable instead of 0, and 1
tab_round_trip$is_round_trip <- factor(tab_round_trip$is_round_trip, levels = c(1, 0), labels = c("round trip", "one-way trip"))
tab_round_trip <- tab_round_trip %>%
group_by(is_round_trip) %>%
mutate(Percentage = n / sum(n) * 100) %>%
arrange(is_round_trip)
# plot the visualizations
ggplot(tab_round_trip, aes(x = "", y = Percentage, fill = member_casual)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "member_casual") +
theme_void() +
facet_wrap(~ is_round_trip) +
labs(fill = "Membership Type") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5))
# plot the visualizations
ggplot(tab_round_trip, aes(x = "", y = Percentage, fill = member_casual)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "member_casual") +
theme_void() +
facet_wrap(~ is_round_trip, strip.position = "bottom") +
labs(fill = "Membership Type") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Totat Ride in Different part of the day based on Season and Weekday/Weeekend")
# plot the visualizations
ggplot(tab_round_trip, aes(x = "", y = Percentage, fill = member_casual)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "member_casual") +
theme_void() +
facet_wrap(~ is_round_trip, strip.position = "bottom") +
labs(fill = "Membership Type") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.0)) +
ggtitle("Percentage of the Totat Ride in Different part of the day based on Season and Weekday/Weeekend")
# plot the visualizations
ggplot(tab_round_trip, aes(x = "", y = Percentage, fill = member_casual)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "member_casual") +
theme_void() +
facet_wrap(~ is_round_trip, strip.position = "bottom") +
labs(fill = "Membership Type") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Totat Ride in Different part of the day based on Season and Weekday/Weeekend")
# plot the visualizations
ggplot(tab_round_trip, aes(x = "", y = Percentage, fill = member_casual)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
labs(fill = "member_casual") +
theme_void() +
facet_wrap(~ is_round_trip, strip.position = "bottom") +
labs(fill = "Membership Type") +
geom_text(aes(label = paste0(round(Percentage), "%")), position = position_stack(vjust = 0.5)) +
ggtitle("Percentage of the Total Ride in Different type of Members and Trip-type")
library(rmarkdown)
getwd()
setwd("Desktop/my_learning/Projects/gda_ride_sharing_insight/ride_history_insights/")
render("documentation/bike_ride_data_report.Rmd", output_format = "pdf_document", output_file = "documentation/data_insight.pdf")
getwd()
render("documentation/bike_ride_data_report.Rmd", output_format = "pdf_document", output_file = "documentation/data_insight.pdf")
render("../documentation/bike_ride_data_report.Rmd", output_format = "pdf_document", output_file = "../documentation/data_insight.pdf")
render("documentation/bike_ride_data_report.Rmd", output_format = "pdf_document", output_file = "data_insight.pdf")
pdflatex --version
